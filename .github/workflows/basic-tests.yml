name: Basic Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  basic-test:
    name: Basic Functionality Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test imports
      run: |
        python -c "import obs_manager; print('✅ obs_manager import OK')"
        python -c "import config; print('✅ config import OK')"
        python -c "import security; print('✅ security import OK')"
        python -c "import logger; print('✅ logger import OK')"
        
    - name: Test CLI help
      run: |
        python obs_utils_improved.py --help
        
    - name: Test configuration creation
      run: |
        python obs_utils_improved.py --create-config --test-mode
        
    - name: Test security levels listing
      run: |
        python obs_utils_improved.py --list-security-levels --test-mode
        
    - name: Verify files exist (Unix)
      if: runner.os != 'Windows'
      run: |
        test -f obs_config.json.sample && echo "[OK] Config sample created" || echo "[ERROR] Config sample missing"
        test -f setup.sh && echo "[OK] setup.sh exists" || echo "[ERROR] setup.sh missing"
        test -f README.md && echo "[OK] README.md exists" || echo "[ERROR] README.md missing"
        
    - name: Verify files exist (Windows)
      if: runner.os == 'Windows'
      run: |
        $env:PYTHONIOENCODING = "utf-8"
        if (Test-Path "obs_config.json.sample") { Write-Host "[OK] Config sample created" } else { Write-Host "[ERROR] Config sample missing" }
        if (Test-Path "setup.bat") { Write-Host "[OK] setup.bat exists" } else { Write-Host "[ERROR] setup.bat missing" }
        if (Test-Path "README.md") { Write-Host "[OK] README.md exists" } else { Write-Host "[ERROR] README.md missing" }
